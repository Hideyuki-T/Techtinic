# ベースイメージ（PHP 8.2-FPM）
FROM php:8.2-fpm

# 作業ディレクトリを指定
WORKDIR /var/www/html

# 必要なパッケージのインストール
RUN apt-get update && apt-get install -y \
    git \
    zip \
    unzip \
    vim \
    zsh \
    libpq-dev \
    netcat-openbsd \
    wget \
    gnupg2 \
  && docker-php-ext-install pdo_pgsql bcmath \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Laravel Dusk 用のChrome と ChromeDriver のインストール
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
  && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
  && apt-get update && apt-get install -y google-chrome-stable \
  && wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip \
  && unzip /tmp/chromedriver.zip -d /usr/local/bin/ \
  && rm /tmp/chromedriver.zip \
  && chmod +x /usr/local/bin/chromedriver \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Composer のインストール（マルチステージビルドの場合は Composer イメージからコピー）
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Node.js の必要な場合は、下記のように LTS版をコピー（例として Node 20 LTS）
COPY --from=node:20.16 /usr/local/bin /usr/local/bin
COPY --from=node:20.16 /usr/local/lib /usr/local/lib

# PHP設定ファイルのコピー（必要に応じてカスタマイズ）
COPY ./docker/php/php.ini /usr/local/etc/php/php.ini

# git のグローバル設定（オプション）
RUN git config --global user.name "YourGitHubUserName" \
    && git config --global user.email "your.email@example.com" \
    && git config --global --add safe.directory /var/www/html

# ~/.zshrc を作成し、エイリアスを設定
RUN touch /root/.zshrc \
    && echo "alias ll='ls -alF'" >> /root/.bashrc \
    && echo "alias gs='git status'" >> /root/.bashrc \
    && echo "alias gp='git pull'" >> /root/.bashrc \
    && echo "alias Tt='php artisan knowledge:teach'" >> /root/.bashrc \
    && echo "alias Tr='php artisan chat:run'" >> /root/.bashrc

# `zsh` をデフォルトシェルに設定
RUN chsh -s $(which zsh)

# コンテナ起動時の作業ディレクトリを指定
WORKDIR /var/www/html
